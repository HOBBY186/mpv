name: build

on:
  push:
    branches:
      - master
      - ci
      - 'release/**'
  pull_request:
    branches: [master]

jobs:
  mingw:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: [i686-w64-mingw32, x86_64-w64-mingw32]
    steps:
      - uses: actions/checkout@v3

      # Increase -N suffix here to force full rebuild after changes
      - uses: actions/cache@v3
        with:
          path: mingw_prefix/
          key: "${{ matrix.target }}-6"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake pkg-config g++-mingw-w64 gcc-multilib meson nasm
          ./bootstrap.py

      - name: Build libraries
        run: |
          ./ci/build-mingw64.sh
        env:
          TARGET: ${{ matrix.target }}

      - name: Build with meson
        run: |
          ./ci/build-mingw64.sh meson pack
        env:
          TARGET: ${{ matrix.target }}

      - name: Print meson log
        if: ${{ failure() }}
        run: |
          cat ./build/meson-logs/meson-log.txt

      - name: Build with waf
        run: |
          ./ci/build-mingw64.sh waf
        env:
          TARGET: ${{ matrix.target }}

      - name: Print waf log
        if: ${{ failure() }}
        run: |
          cat ./build/config.log

      - uses: actions/upload-artifact@v3
        with:
          name: mpv-${{ matrix.target }}
          path: mpv-git-*.zip

  macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cc:
          - "clang"
        os:
          - "macos-13"
    steps:
      - uses: actions/checkout@v3

      - name: Remove stray upstream python binary symlinks under /usr/local
        run: |
          find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete -print
          brew unlink python && brew link --overwrite python

      - name: Install dependencies
        run: |
          brew update
          brew install autoconf automake pkg-config libtool python freetype fribidi little-cms2 lua@5.1 libass ffmpeg meson

      - name: Build with meson
        run: |
          ./ci/build-macos.sh meson
        env:
          CC: "${{ matrix.cc }}"
          TRAVIS_OS_NAME: "${{ matrix.os }}"

      - name: Print meson log
        if: ${{ failure() }}
        run: |
          cat ./build/meson-logs/meson-log.txt

      - name: Build with waf
        run: |
          ./ci/build-macos.sh waf
        env:
          CC: "${{ matrix.cc }}"
          TRAVIS_OS_NAME: "${{ matrix.os }}"

      - name: Print waf log
        if: ${{ failure() }}
        run: |
          cat ./build/config.log
